{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.reactFormatter = exports.isSameObject = exports.isSameArray = exports.clone = void 0;\nvar React = require(\"react\");\nvar react_dom_1 = require(\"react-dom\");\nfunction clone(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\nexports.clone = clone;\nfunction isSameArray(a, b) {\n  var i = a && a.length ? a.length : 0;\n  if (i !== (b && b.length ? b.length : 0)) {\n    return false;\n  }\n  while (i--) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.isSameArray = isSameArray;\n// source: https://stackoverflow.com/questions/4816099/chrome-sendrequest-error-typeerror-converting-circular-structure-to-json\nfunction stringifyCensor(censor) {\n  var i = 0;\n  return function (key, value) {\n    if (i !== 0 && typeof censor === 'object' && typeof value == 'object' && censor == value) {\n      return '[Circular]';\n    }\n    if (i >= 29) {\n      // seems to be a harded maximum of 30 serialized objects?\n      return '[Unknown]';\n    }\n    ++i; // so we know we aren't using the original object anymore\n    return value;\n  };\n}\nfunction isSameObject(a, b) {\n  return JSON.stringify(a, stringifyCensor(a)) === JSON.stringify(b, stringifyCensor(b));\n}\nexports.isSameObject = isSameObject;\nfunction reactFormatter(JSX) {\n  return function customFormatter(cell, formatterParams, onRendered) {\n    // cell - the cell component\n    // formatterParams - parameters set for the column\n    // onRendered - function to call when the formatter has been rendered\n    var renderFn = function () {\n      var cellEl = cell.getElement();\n      if (cellEl) {\n        var formatterCell = cellEl.querySelector('.formatterCell');\n        if (formatterCell) {\n          var CompWithMoreProps = React.cloneElement(JSX, {\n            cell: cell\n          });\n          react_dom_1.render(CompWithMoreProps, cellEl.querySelector('.formatterCell'));\n        }\n      }\n    };\n    onRendered(renderFn); // initial render only.\n    setTimeout(function () {\n      renderFn(); // render every time cell value changed.\n    }, 0);\n    return '<div class=\"formatterCell\"></div>';\n  };\n}\nexports.reactFormatter = reactFormatter;","map":{"version":3,"names":["exports","__esModule","reactFormatter","isSameObject","isSameArray","clone","React","require","react_dom_1","obj","JSON","parse","stringify","a","b","i","length","stringifyCensor","censor","key","value","JSX","customFormatter","cell","formatterParams","onRendered","renderFn","cellEl","getElement","formatterCell","querySelector","CompWithMoreProps","cloneElement","render","setTimeout"],"sources":["/Users/fatimamartins/ES-2024-EI-Grupo-G/node_modules/react-tabulator/lib/Utils.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.reactFormatter = exports.isSameObject = exports.isSameArray = exports.clone = void 0;\nvar React = require(\"react\");\nvar react_dom_1 = require(\"react-dom\");\nfunction clone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\nexports.clone = clone;\nfunction isSameArray(a, b) {\n    var i = a && a.length ? a.length : 0;\n    if (i !== (b && b.length ? b.length : 0)) {\n        return false;\n    }\n    while (i--) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isSameArray = isSameArray;\n// source: https://stackoverflow.com/questions/4816099/chrome-sendrequest-error-typeerror-converting-circular-structure-to-json\nfunction stringifyCensor(censor) {\n    var i = 0;\n    return function (key, value) {\n        if (i !== 0 && typeof censor === 'object' && typeof value == 'object' && censor == value) {\n            return '[Circular]';\n        }\n        if (i >= 29) {\n            // seems to be a harded maximum of 30 serialized objects?\n            return '[Unknown]';\n        }\n        ++i; // so we know we aren't using the original object anymore\n        return value;\n    };\n}\nfunction isSameObject(a, b) {\n    return JSON.stringify(a, stringifyCensor(a)) === JSON.stringify(b, stringifyCensor(b));\n}\nexports.isSameObject = isSameObject;\nfunction reactFormatter(JSX) {\n    return function customFormatter(cell, formatterParams, onRendered) {\n        // cell - the cell component\n        // formatterParams - parameters set for the column\n        // onRendered - function to call when the formatter has been rendered\n        var renderFn = function () {\n            var cellEl = cell.getElement();\n            if (cellEl) {\n                var formatterCell = cellEl.querySelector('.formatterCell');\n                if (formatterCell) {\n                    var CompWithMoreProps = React.cloneElement(JSX, { cell: cell });\n                    react_dom_1.render(CompWithMoreProps, cellEl.querySelector('.formatterCell'));\n                }\n            }\n        };\n        onRendered(renderFn); // initial render only.\n        setTimeout(function () {\n            renderFn(); // render every time cell value changed.\n        }, 0);\n        return '<div class=\"formatterCell\"></div>';\n    };\n}\nexports.reactFormatter = reactFormatter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}